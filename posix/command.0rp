concrete Command {
  refines AsyncTask
  refines AsyncValue<ErrorOr<Int>>

  // NOTE: If the descriptor is non-empty and not stdin, stdout, or stderr, then
  // it will be closed upon start().
  @type new (String,
             ReadAt<String>,
             optional FileDescriptor,
             optional FileDescriptor,
             optional FileDescriptor) ->
            (Command)

  @value runOnce () -> (ErrorOr<Int>)
  @value runDetached () -> (ErrorOr<Int>)
}

concrete CommandBuilder {
  refines Build<Command>
  refines Append<Formatted>

  @type for (String) -> (CommandBuilder)

  @value addArg (Formatted) -> (#self)

  // NOTE: If the descriptor is non-empty and not stdin, stdout, or stderr, then
  // it will be closed upon start().

  @value setStdin  (optional FileDescriptor) -> (#self)
  @value setStdout (optional FileDescriptor) -> (#self)
  @value setStderr (optional FileDescriptor) -> (#self)
}

concrete CommandPipe {
  refines Build<[AsyncTask&AsyncValue<ErrorOr<Int>>]>

  @type begin (CommandBuilder) -> (#self)
  @value pipeStdout (CommandBuilder) -> (#self)
  @value pipeStderr (CommandBuilder) -> (#self)
}
