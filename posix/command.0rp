concrete Command {
  refines AsyncTask
  refines AsyncValue<ErrorOr<Int>>

  @type buildFor (String) -> (CommandBuilder)

  @value runOnce () -> (ErrorOr<Int>)
  @value runDetached () -> (ErrorOr<Int>)
}

@value interface CommandBuilder {
  // NOTE: Calling build() invalidates the builder.
  refines Build<Command>
  refines Append<Formatted>

  addArg (Formatted) -> (#self)

  // NOTE: If the descriptor is non-empty and not stdin, stdout, or stderr, then
  // it will be closed upon start().

  setStdin  (optional FileDescriptor) -> (#self)
  setStdout (optional FileDescriptor) -> (#self)
  setStderr (optional FileDescriptor) -> (#self)
}

concrete CommandPipe {
  refines Build<[AsyncTask&AsyncValue<ErrorOr<Int>>]>

  @type begin (CommandBuilder) -> (#self)
  @value pipeStdout (CommandBuilder) -> (#self)
  @value pipeStderr (CommandBuilder) -> (#self)
}
