@value interface ExecCommand<|#id> {
  refines AsyncNode<#id>
  // Returns exit status or error message.
  refines AsyncValue<ErrorOr<Int>>
}

concrete AsyncExec<#id> {
  refines ExecCommand<#id>

  // Args:
  // - String: Command name.
  // - optional ReadAt<Formatted>: Args not including the command name.
  @category withArgs<#id>
    #id defines UniqueId
  (String,ReadAt<Formatted>) -> (AsyncExec<#id>)

  @value runOnce () -> (ErrorOr<Int>)
}

concrete ChainExec<#id> {
  refines ExecCommand<#id>

  @category runAfter<#id>
    #id defines UniqueId
  (ExecCommand<#id>,DefaultOrder<ExecCommand<#id>>) -> (ChainExec<#id>)
}

concrete Command {
  refines AsyncTask
  refines AsyncValue<ErrorOr<Int>>

  @type new (String,ReadAt<String>,String,String,String) -> (Command)
  @value runOnce () -> (ErrorOr<Int>)
}

concrete CommandBuilder {
  refines Build<Command>
  refines Append<Formatted>

  @type for (String) -> (CommandBuilder)

  @value addArg    (Formatted) -> (#self)
  @value setStdin  (String)    -> (#self)
  @value setStdout (String)    -> (#self)
  @value setStderr (String)    -> (#self)
}
