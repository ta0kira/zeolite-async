@value interface TraversalNode<|#id> {
  getId () -> (#id)

  // Appends children that are no longer blocked.
  disownChildren (Append<#self>) -> (#self)
}

@value interface WeightedNode<|#id> {
  refines TraversalNode<#id>

  // Total weight including self.
  getWeight () -> (Float)
}

@value interface SizedNode<|#id> {
  refines TraversalNode<#id>

  // Total size including self.
  getSize () -> (Int)
}

concrete WeightedGraphBuilder<#id> {
  #id immutable
  #id defines Equals<#id>

  @category fromHashed<#id>
    #id immutable
    #id requires Hashed
    #id defines Equals<#id>
  (DefaultOrder<GraphNode<#id>>) -> (DefaultOrder<WeightedNode<#id>>)

  @category fromOrdered<#id>
    #id immutable
    #id defines Equals<#id>
    #id defines LessThan<#id>
  (DefaultOrder<GraphNode<#id>>) -> (DefaultOrder<WeightedNode<#id>>)
}

concrete WeightedTraverser<#id> {
  #id immutable
  #id defines Equals<#id>

  // Complexity: max{ O(VE), O(V^2) }
  @category with<#id>
    #id immutable
    #id defines Equals<#id>
  (DefaultOrder<WeightedNode<#id>>,IndexSelector) -> (GraphTraverser<#id>)
}

concrete TreeTraverser<#id> {
  #id immutable
  #id defines Equals<#id>
  #id defines LessThan<#id>

  // Complexity: O(V log V)
  @category with<#id>
    #id immutable
    #id defines Equals<#id>
    #id defines LessThan<#id>
  (SizedNode<#id>,Generator<Float>) -> (GraphTraverser<#id>)
}
