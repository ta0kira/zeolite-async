concrete WeightedGraphBuilder<#id> {
  #id immutable
  #id defines Equals<#id>

  @category fromHashed<#id>
    #id immutable
    #id requires Hashed
    #id defines Equals<#id>
  (DefaultOrder<GraphNode<#id>>) -> (DefaultOrder<WeightedNode<#id>>)

  @category fromOrdered<#id>
    #id immutable
    #id defines Equals<#id>
    #id defines LessThan<#id>
  (DefaultOrder<GraphNode<#id>>) -> (DefaultOrder<WeightedNode<#id>>)
}

concrete WeightedTraverser<#id> {
  #id immutable
  #id defines Equals<#id>

  // Notes:
  // - Complexity is max{ O(VE), O(V^2) }.
  // - Optimal for graphs without undirected cycles, e.g., trees.
  // - Generally not optimal otherwise.
  @category allWith<#id>
    #id immutable
    #id defines Equals<#id>
  (DefaultOrder<WeightedNode<#id>>,IndexSelector) -> (GraphTraverser<#id>)

  // Notes:
  // - Complexity is O(VE).
  // - Not optimal.
  // - Distribution for duals of graphs without undirected cycles (e.g., trees)
  //   should be isomorphic.
  @category pathWith<#id>
    #id immutable
    #id defines Equals<#id>
  (DefaultOrder<WeightedNode<#id>>,IndexSelector) -> (GraphTraverser<#id>)
}
